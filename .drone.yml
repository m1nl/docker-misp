---
kind: pipeline
type: docker
name: default

concurrency:
  limit: 1

environment:
  REGISTRY: "docker.io"
  ACCOUNT_PREFIX: "m1nl/"
  IMAGE: "misp"
  DOCKER_HOST: "tcp://docker:2376"
  DOCKER_CERT_PATH: "/certs/client"
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: "1"

steps:
  - name: wait_for_docker
    image: docker
    volumes:
      - name: docker-client-certdir
        path: /certs/client
    commands:
      - "until docker info >/dev/null 2>&1; do sleep 5; done"

  - name: build_publish_server
    image: docker
    volumes:
      - name: docker-client-certdir
        path: /certs/client
    environment:
      COMPONENT: server
      REGISTRY_USERNAME:
        from_secret: dockerhub_username
      REGISTRY_PASSWORD:
        from_secret: dockerhub_password
    commands:
      - "export $(cat .env | xargs)"
      - "docker login -u \"$REGISTRY_USERNAME\" -p \"$REGISTRY_PASSWORD\" \"$REGISTRY\""
      - "cd $COMPONENT"
      - "export DOCKER_IMAGE=\"$${ACCOUNT_PREFIX}$${IMAGE}-$${COMPONENT}\""
      - "docker pull \"$REGISTRY/$DOCKER_IMAGE:latest\" || true"
      - "docker build --cache-from \"$REGISTRY/$DOCKER_IMAGE:latest\" --build-arg MISP_TAG=$MISP_TAG --build-arg MODULES_TAG=$MODULES_TAG --build-arg PHP_VER=$PHP_VER -t \"$REGISTRY/$DOCKER_IMAGE:$DRONE_BRANCH\" ."
      - "[ \"$DRONE_BRANCH\" == \"main\" ] && docker tag \"$REGISTRY/$DOCKER_IMAGE:$DRONE_BRANCH\" \"$REGISTRY/$DOCKER_IMAGE:latest\""
      - "[ ! -z \"$DRONE_TAG\" ] && docker tag \"$REGISTRY/$DOCKER_IMAGE:$DRONE_BRANCH\" \"$REGISTRY/$DOCKER_IMAGE:$DRONE_TAG\""
      - "docker push --all-tags \"$REGISTRY/$DOCKER_IMAGE\""

  - name: build_publish_modules
    image: docker
    volumes:
      - name: docker-client-certdir
        path: /certs/client
    environment:
      COMPONENT: modules
      REGISTRY_USERNAME:
        from_secret: dockerhub_username
      REGISTRY_PASSWORD:
        from_secret: dockerhub_password
    commands:
      - "export $(cat .env | xargs)"
      - "docker login -u \"$REGISTRY_USERNAME\" -p \"$REGISTRY_PASSWORD\" \"$REGISTRY\""
      - "cd $COMPONENT"
      - "export DOCKER_IMAGE=\"$${ACCOUNT_PREFIX}$${IMAGE}-$${COMPONENT}\""
      - "docker pull \"$REGISTRY/$DOCKER_IMAGE:latest\" || true"
      - "docker build --cache-from \"$REGISTRY/$DOCKER_IMAGE:latest\" --build-arg MISP_TAG=$MISP_TAG --build-arg MODULES_TAG=$MODULES_TAG --build-arg PHP_VER=$PHP_VER -t \"$REGISTRY/$DOCKER_IMAGE:$DRONE_BRANCH\" ."
      - "[ \"$DRONE_BRANCH\" == \"main\" ] && docker tag \"$REGISTRY/$DOCKER_IMAGE:$DRONE_BRANCH\" \"$REGISTRY/$DOCKER_IMAGE:latest\""
      - "[ ! -z \"$DRONE_TAG\" ] && docker tag \"$REGISTRY/$DOCKER_IMAGE:$DRONE_BRANCH\" \"$REGISTRY/$DOCKER_IMAGE:$DRONE_TAG\""
      - "docker push --all-tags \"$REGISTRY/$DOCKER_IMAGE\""
      - "docker login -u \"$REGISTRY_USERNAME\" -p \"$REGISTRY_PASSWORD\" \"$REGISTRY\""

  - name: notify_failure
    image: drillster/drone-email
    settings:
      host:
        from_secret: mail_host
      username:
        from_secret: mail_username
      password:
        from_secret: mail_password
      from:
        from_secret: drone_sender
      recipients:
        from_secret: drone_recipients
      recipients_only: true
    when:
      status:
      - failure

services:
  - name: docker
    image: docker:dind
    privileged: true
    volumes:
      - name: docker-client-certdir
        path: /certs/client

volumes:
  - name: docker-client-certdir
    temp: {}

concurrency:
  limit: 1
---
kind: signature
hmac: f92240bf7d77cd65b42e4403c4780cf3f817f342580fd9ec21b96df7cb646f87

...
